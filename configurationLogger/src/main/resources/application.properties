#Declaring secrets
quarkus.openshift.env.secrets=oc-login-credentials

# # Extracting openshihft login url value from secret into LOGIN_URL environment variable
# quarkus.openshift.env.mapping.login-url.from-secret=oc-login-credentials
# quarkus.openshift.env.mapping.login-url.with-key=master-url

# # Extracting openshihft login token value from secret into LOGIN_TOKEN environment variable
# quarkus.openshift.env.mapping.login-token.from-secret=oc-login-credentials
# quarkus.openshift.env.mapping.login-token.with-key=token

# quarkus.kubernetes-client.master-url=${LOGIN_URL}
# quarkus.kubernetes-client.token=${LOGIN_TOKEN}

# Declaring ConfigMaps
quarkus.openshift.env.configmaps=gitops-microservice-build

#
# quarkus.openshift.env.mapping.properties.from-configmap=gitops-microservice-build
# quarkus.openshift.env.mapping.properties.with-key=properties

# application.properties.values=${PROPERTIES}
#
# quarkus.openshift.env.mapping.trust-certs.from-configmap=gitops-microservice-build
# quarkus.openshift.env.mapping.trust-certs.with-key=properties.trust-certs

quarkus.kubernetes-client.trust-certs=true

#
# quarkus.openshift.env.mapping.namespace.from-configmap=gitops-microservice-build
# quarkus.openshift.env.mapping.namespace.with-key=properties.namespace

quarkus.kubernetes-client.namespace=gitops-kustomize

# #
# quarkus.openshift.env.mapping.deploy-app.from-configmap=gitops-microservice-build
# quarkus.openshift.env.mapping.deploy-app.with-key=properties.deploy

quarkus.kubernetes.deploy=false

#
# quarkus.openshift.env.mapping.image-build.from-configmap=gitops-microservice-build
# quarkus.openshift.env.mapping.image-build.with-key=build

quarkus.container-image.build=true

# #
# quarkus.openshift.env.mapping.expose.from-configmap=gitops-microservice-build
# quarkus.openshift.env.mapping.expose.with-key=properties.expose

quarkus.openshift.route.expose=false

#
quarkus.openshift.env.mapping.data.from-configmap=gitops-microservice-build
quarkus.openshift.env.mapping.data.with-key=json-test

# Custom property created to demonstrate usage of JSON converter
config.gitops-microservice-build.data = ${DATA}

quarkus.openshift.env.mapping.pocname.from-configmap=gitops-microservice-build
quarkus.openshift.env.mapping.pocname.with-key=poc.name

# Properties for InterfaceConfiguration
quarkus.openshift.env.mapping.pocname.from-configmap=gitops-microservice-build
quarkus.openshift.env.mapping.pocname.with-key=poc.name
poc.name = ${POCNAME}
poc.team.name = Innovation Center
poc.team.gitops-developer-count = 4-5
poc.lifecycle = 4-6 months
poc.phase.name = developement
poc.phase.status = active


# Swagger-UI
quarkus.swagger-ui.always-include=true

# Declare extension to be used
quarkus.container-image.builder=jib

# Server address of artifactory
quarkus.container-image.registry=artifactory-artifactory.apps.xnkpeyx0.canadacentral.aroapp.io

# Pushing the image to the artifactory
quarkus.container-image.push=true

# Name of the image
quarkus.container-image.name=gitops-micro

# Artifacrtory Repository name
quarkus.container-image.group=gitops-local

# Image Tag
quarkus.container-image.tag=latest

# Artifactory credentials
quarkus.container-image.username=admin
quarkus.container-image.password=Admin123!
# quarkus.container-image.insecure=true

