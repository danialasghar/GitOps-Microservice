# # Declaring secrets
# quarkus.openshift.env.secrets=oc-login-credentials

# # Extracting openshihft login url value from secret into LOGIN_URL environment variable
# quarkus.openshift.env.mapping.login-url.from-secret=oc-login-credentials
# quarkus.openshift.env.mapping.login-url.with-key=master-url

# # Extracting openshihft login token value from secret into LOGIN_TOKEN environment variable
# quarkus.openshift.env.mapping.login-token.from-secret=oc-login-credentials
# quarkus.openshift.env.mapping.login-token.with-key=token

# quarkus.kubernetes-client.master-url=${LOGIN_URL:https://api.xnkpeyx0.canadacentral.aroapp.io:6443}
# quarkus.kubernetes-client.token=${LOGIN_TOKEN:sha256~A0RiawZcJ86uCK1zoZc7QzYcac7wKt0HDu1mb9OQLoY}

# # Declaring ConfigMaps
# quarkus.openshift.env.configmaps= gitops-microservice-base-url,gitops-microservice-build

# #Extracting api base url into API_BASE_URL environment variable
# quarkus.openshift.env.mapping.api-base-url.from-configmap=gitops-microservice-base-url
# quarkus.openshift.env.mapping.api-base-url.with-key=url

# quarkus.resteasy-reactive.path=${API_BASE_URL:/api/v1}

# #
# quarkus.openshift.env.mapping.trust-certs.from-configmap=gitops-microservice-build
# quarkus.openshift.env.mapping.trust-certs.with-key=trust-certs

# quarkus.kubernetes-client.trust-certs=${TRUST_CERTS:true}

# #
# quarkus.openshift.env.mapping.namespace.from-configmap=gitops-microservice-build
# quarkus.openshift.env.mapping.namespace.with-key=namespace

# quarkus.kubernetes-client.namespace=${NAMESPACE:argocd-test}

# #
# quarkus.openshift.env.mapping.deploy-app.from-configmap=gitops-microservice-build
# quarkus.openshift.env.mapping.deploy-app.with-key=deploy-app

# quarkus.kubernetes.deploy=${DEPLOY_APP: true}

# #
# quarkus.openshift.env.mapping.image-build.from-configmap=gitops-microservice-build
# quarkus.openshift.env.mapping.image-build.with-key=build

# # quarkus.container-image.build=${IMAGE_BUILD}

# #
# quarkus.openshift.env.mapping.expose-route.from-configmap=gitops-microservice-build
# quarkus.openshift.env.mapping.expose-route.with-key=expose

# quarkus.container-image.build=${EXPOSE_ROUTE:true}

# quarkus.resteasy-reactive.path=/api/v1
# quarkus.kubernetes-client.master-url=https://api.xnkpeyx0.canadacentral.aroapp.io:6443
# quarkus.kubernetes-client.token=sha256~A0RiawZcJ86uCK1zoZc7QzYcac7wKt0HDu1mb9OQLoY
# quarkus.kubernetes-client.trust-certs=true
# quarkus.kubernetes-client.namespace=argocd-test
# quarkus.kubernetes.deploy=true
# quarkus.container-image.build=true
# quarkus.openshift.route.expose=true


# Declaring secrets
quarkus.openshift.env.secrets=oc-login-credentials

# Extracting openshihft login url value from secret into LOGIN_URL environment variable
quarkus.openshift.env.mapping.login-url.from-secret=oc-login-credentials
quarkus.openshift.env.mapping.login-url.with-key=master-url

# Extracting openshihft login token value from secret into LOGIN_TOKEN environment variable
quarkus.openshift.env.mapping.login-token.from-secret=oc-login-credentials
quarkus.openshift.env.mapping.login-token.with-key=token

quarkus.kubernetes-client.master-url=${LOGIN_URL}
quarkus.kubernetes-client.token=${LOGIN_TOKEN}

# Declaring ConfigMaps
quarkus.openshift.env.configmaps= gitops-microservice-base-url,gitops-microservice-build

#Extracting api base url into API_BASE_URL environment variable
quarkus.openshift.env.mapping.api-base-url.from-configmap=gitops-microservice-base-url
quarkus.openshift.env.mapping.api-base-url.with-key=url

quarkus.resteasy-reactive.path=${API_BASE_URL}

#
quarkus.openshift.env.mapping.trust-certs.from-configmap=gitops-microservice-build
quarkus.openshift.env.mapping.trust-certs.with-key=trust-certs

quarkus.kubernetes-client.trust-certs=${TRUST_CERTS}

#
quarkus.openshift.env.mapping.namespace.from-configmap=gitops-microservice-build
quarkus.openshift.env.mapping.namespace.with-key=namespace

quarkus.kubernetes-client.namespace=${NAMESPACE}

#
quarkus.openshift.env.mapping.deploy-app.from-configmap=gitops-microservice-build
quarkus.openshift.env.mapping.deploy-app.with-key=deploy

quarkus.kubernetes.deploy=${DEPLOY_APP:true}

#
quarkus.openshift.env.mapping.image-build.from-configmap=gitops-microservice-build
quarkus.openshift.env.mapping.image-build.with-key=build

# quarkus.container-image.build=${IMAGE_BUILD}

#
quarkus.openshift.env.mapping.expose.from-configmap=gitops-microservice-build
quarkus.openshift.env.mapping.expose.with-key=expose

quarkus.openshift.route.expose=${EXPOSE:true}

# Swagger-UI
quarkus.swagger-ui.always-include=true